{"vbsetupTable": {
    "prefix": "vbsetupTable",
    "body": [
      "<template>",
      "  <div>",
      "    <BasicTable",
      "      :showTableSetting=true",
      "      :columns=\"basicColumns\"",
      "      :actionColumn = \"{",
      "          width: 120,",
      "          title: '操作',",
      "          dataIndex: 'action',",
      "          slots: { customRender: 'action' },",
      "        }\"",
      "      >",
      "      <template #action=\"{ record }\">",
      "        <TableAction",
      "          :actions=\"[",
      "            {",
      "              label: '查看',",
      "              onClick: showFormMessage.bind(null, record),",
      "            },",
      "          ]\"",
      "        />",
      "      </template>",
      "    </BasicTable>",
      "    <Modal v-loading=\"loading\" v-model:visible=\"visible\" :destroyOnClose=\"true\" :canFullscreen=\"false\"",
      "      title=\"查看信息\" ",
      "      @cancel=\"cancelModal\"",
      "      :footer=\"null\">",
      "    </Modal>",
      "  </div>",
      "</template>",
      "<script lang=\"ts\" setup>",
      "import { ref, defineProps, nextTick } from 'vue';",
      "import { BasicTable, TableAction } from '/@/components/Table';",
      "import { Modal } from \"ant-design-vue\";",
      "",
      "const props = defineProps({",
      "});",
      "let visible = ref(false)",
      "let loading = ref(false)",
      "let basicColumns = ref([",
      "    {",
      "      title: '表单',",
      "      width: 50,",
      "      dataIndex: 'formKey'",
      "    },",
      "    ",
      "  ])",
      "",
      "function cancelModal() {",
      "  visible.value = false;",
      "}",
      "</script>"
    ],
    "description": "vbsetupTable"
  },
  "emitsetup": {
    "prefix": "",
    "body": [
      "const emit = defineEmits(['$1']);"
    ],
    "description": "emitforsetup"
  },
    "vue-vben-Page": {
    "scope": "javascript,typescript,vue",
    "prefix": "vue-vben-page",
    "body": [
      "<template>",
      "  <PageWrapper>",
      "    <div :class=\"`\\${prefixCls}`\"> ${1:Template} </div>",
      "  </PageWrapper>",
      "</template>",
      "<script lang=\"ts\" setup>",
      "  import { PageWrapper } from '/@/components/Page';",
      "  import { useI18n } from '/@/hooks/web/useI18n';",
      "  import { useDesign } from '/@/hooks/web/useDesign';",
      "  const { prefixCls } = useDesign('${1:Template}');",
      "  const { t } = useI18n();",
      "</script>",
      "<style lang=\"less\" scoped>",
      "  @prefix-cls: ~'@{namespace}-${1:Template}';",
      "  .@{prefix-cls} {",
      "    color: #333",
      "  }",
      "</style>",
      ""
    ],
    "description": "vuePage基本结构"
  },
  "vue-components-base": {
    "scope": "javascript,typescript,vue",
    "prefix": "vue-vben-component",
    "body": [
      "<template>",
      "  <div :class=\"`\\${prefixCls}`\"> ${1:Template} </div>",
      "</template>",
      "<script lang=\"ts\" setup>",
      "  import { useI18n } from '/@/hooks/web/useI18n';",
      "  import { useDesign } from '/@/hooks/web/useDesign';",
      "  const { prefixCls } = useDesign('${1:Template}');",
      "  const { t } = useI18n();",
      "</script>",
      "<style lang=\"less\" scoped>",
      "  @prefix-cls: ~'@{namespace}-${1:Template}';",
      "  .@{prefix-cls} {",
      "    color: #333",
      "  }",
      "</style>",
      ""
    ],
    "description": "vueComponent基本结构"
  }

}
